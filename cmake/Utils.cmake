function(install_headers_recursive src_dir)
    file(GLOB_RECURSE PUBLIC_HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ${src_dir}/*.h ${src_dir}/*.hpp)

    foreach(file ${PUBLIC_HEADERS})
        get_filename_component(file_dir ${file} DIRECTORY)
	install(FILES ${file} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${file_dir})
    endforeach()
endfunction()

function(set_compiler_clang clang_path)
    set(CMAKE_C_COMPILER "${clang_path}${EXE_EXT}" PARENT_SCOPE)
    set(CMAKE_CXX_COMPILER "${clang_path}++${EXE_EXT}" PARENT_SCOPE)
    set(CMAKE_ASM_COMPILER "${clang_path}${EXE_EXT}" PARENT_SCOPE)
endfunction()

function(find_utils_for_mods)
    find_program(curl_path "curl")
    if(NOT curl_path)
        message(WARNING "curl not found in $PATH, deploying to console through ftp won't work properly")
    endif()
    set(CURL_PATH ${curl_path} CACHE FILEPATH "Path to the curl executable, searched for in $PATH if not set by the user")
    find_program(linkle_path "linkle")
    if(NOT linkle_path)
        message(WARNING "linkle not found in $PATH, but it's required for converting the mod ELF to a NSO")
    endif()
    set(LINKLE_PATH ${linkle_path} CACHE FILEPATH "Path to the linkle executable, searched for in $PATH if not set by the user")
endfunction()
